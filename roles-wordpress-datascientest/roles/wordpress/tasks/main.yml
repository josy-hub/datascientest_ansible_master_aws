---
# tasks file for wordpress
- name: WordPress | Installer php
  apt:
    pkg:
      [
        "php-pear",
        "php-fpm",
        "php-dev",
        "php-zip",
        "php-curl",
        "php-xmlrpc",
        "php-gd",
        "php-mysql",
        "php-mbstring",
        "php-xml",
      ]
    update_cache: yes
    cache_valid_time: 86400
    state: present

- name: Wordpress | Installer nginx
  apt:
    pkg: nginx
    update_cache: yes
    cache_valid_time: 86400
    state: present
  when: wp_webserver == "nginx"

- name: WordPress | Supprimer des éléments de /var/www/html/
  file:
    path: /var/www/html/index.html
    state: absent
  when: wp_install_dir == "/var/www/html"

- name: WordPress | Créer un répertoire
  file:
    path: "{{ wp_install_dir }}"
    state: directory
    mode: 0755

- name: WordPress | Extraire l'archive dans{{ wp_install_dir }}
  unarchive:
    src: "http://wordpress.org/wordpress-{{ wp_version }}.tar.gz"
    dest: "{{ wp_install_dir }}"
    remote_src: yes

- name: WordPress | Déplacer les fichiers de {{ wp_install_dir }}/wordpress à {{ wp_install_dir }}
  command: cp -rf . "{{ wp_install_dir }}"
  args:
    chdir: "{{ wp_install_dir }}/wordpress/"

- name: WordPress | Supprimer le répertoire wordpress
  file:
    path: "{{ wp_install_dir }}/wordpress/"
    state: absent

- name: WordPress | Récupérer des sels aléatoires pour wp-config.php
  delegate_to: localhost
  uri:
    url: https://api.wordpress.org/secret-key/1.1/salt/
    return_content: yes
  become: False
  register: "wp_salt_array"

- name: définir le fait wp_salt
  set_fact:
    wp_salt: "{{ wp_salt_array.content }}"

- name: WordPress | Copiez le fichier wp-config.php
  template:
    src: wp-config.php.j2
    dest: "{{ wp_install_dir }}/wp-config.php"

- name: WordPress | Changer le propriétaire du répertoire d'installation
  file:
    path: "{{ wp_install_dir }}"
    owner: www-data
    group: www-data
    state: directory
    recurse: yes

- include_tasks: nginx.yml
  when: wp_webserver == "nginx"

- name: Installation de mysql-server
  apt:
    pkg: mysql-server
    update_cache: yes
    cache_valid_time: 86400
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Installation de mariadb-server
  apt:
    pkg: mariadb-server
    update_cache: yes
    cache_valid_time: 86400
    state: present
  when: ansible_distribution == 'Debian'

- name: Démarrer MariaDB
  service:
    name: mysql
    state: started

- name: Installation des dépendances
  apt:
    pkg: ["php-mysql", "python3-pymysql"]
    update_cache: yes
    cache_valid_time: 86400
    state: present
  notify:
    - restart {{ wp_webserver }}

- name: Créer une base de données mysql
  mysql_db:
    name: "{{ wp_mysql_db }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Créer un utilisateur mysql
  mysql_user:
    name: "{{ wp_mysql_user }}"
    password: "{{ wp_mysql_password }}"
    priv: "*.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
