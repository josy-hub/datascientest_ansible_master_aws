---
# tasks file for magento

- name: Installer PHP et ses extensions
  apt:
    name: software-properties-common
    state: present

- name: Ajouter le PPA pour PHP
  apt_repository:
    repo: ppa:ondrej/php
    state: present

- name: Update Repository and Full-Upgrade Packages
  apt:
    update_cache: yes

- name: Installer les dépendances php{{ php_version }} et composer
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - php{{ php_version }}
    - php{{ php_version }}-mysql
    - php{{ php_version }}-xml
    - php{{ php_version }}-mbstring
    - php{{ php_version }}-curl
    - php{{ php_version }}-intl
    - php{{ php_version }}-soap
    - php{{ php_version }}-zip
    - php{{ php_version }}-fpm
    - php{{ php_version }}-bcmath
    - php{{ php_version }}-dom
    - php{{ php_version }}-gd
    - php{{ php_version }}-iconv
    - php{{ php_version }}-simplexml
    - php{{ php_version }}-xsl
    - php{{ php_version }}-cli
    - php{{ php_version }}-ctype
    - php{{ php_version }}-fileinfo
    - php{{ php_version }}-sockets
    - php{{ php_version }}-tokenizer
    - php{{ php_version }}-xmlwriter
    - acl
    - unzip


- name: Suppression de l'ancien fichier composer s'il existe
  file:
    path: /usr/local/bin/composer
    state: absent
  ignore_errors: yes

- name: Téléchargement de Composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer-setup.php{{ php_version }}
    mode: 0755

- name: Installation de Composer en global
  command: php{{ php_version }} /tmp/composer-setup.php{{ php_version }} --install-dir=/usr/local/bin --filename=composer

- name: Vérification de la version de Composer
  command: composer --version
  register: composer_version
  become_user: datascientest
  ignore_errors: yes
  

- debug:
    var: composer_version.stdout

- name: Ajout de la clé GPG ElasticSearch
  ansible.builtin.apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Ajout du dépôt Elasticsearch
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
    state: present
    filename: "elasticsearch"
    update_cache: yes

- name: Installation d'Elasticsearch
  apt:
    name: "elasticsearch={{ elastic_version }}"
    state: present

- name: Créer un fichier swap de 1 Go
  command: fallocate -l 1G /swapfile
  args:
    creates: /swapfile

- name: Appliquer les permissions appropriées au fichier swap
  file:
    path: /swapfile
    mode: '0600'

- name: Configurer le fichier swap
  command: mkswap /swapfile
  when: ansible_swaptotal_mb == 0

- name: Activer le swap
  command: swapon /swapfile
  when: ansible_swaptotal_mb == 0

- name: Ajouter le fichier swap à fstab pour un montage persistant
  lineinfile:
    path: /etc/fstab
    line: '/swapfile none swap sw 0 0'
    state: present
    create: yes

- name: Configuration d'Elasticsearch pour écouter sur localhost
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    #regexp: '^#network.host:'
    regexp: '^#? *network.host:'
    line: 'network.host: 0.0.0.0'
    state: present
  notify: Redémarrage Elasticsearch

- name: activation du démarrage du service Elasticsearch au démarrage
  systemd:
    name: elasticsearch
    enabled: yes
    state: started

- name: Réduire l'allocation de mémoire pour Elasticsearch à 512 Mo
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xms'
    line: '-Xms512m'
    state: present
  notify: Redémarrage Elasticsearch

- name: Configurer la limite supérieure de mémoire pour Elasticsearch
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xmx'
    line: '-Xmx512m'
    state: present
  notify: Redémarrage Elasticsearch

- name: Configurer Elasticsearch pour un mode nœud unique
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
#    regexp: '^#discovery.seed_hosts:'
    regexp: '^#? *discovery.seed_hosts:'
    line: 'discovery.seed_hosts: ["127.0.0.1"]'
    state: present
  notify: Redémarrage Elasticsearch

- name: Suppression du répertoire /var/www/magento s'il existe déjà
  file:
    path: /var/www/magento
    state: absent

- name: Création du répertoire /var/www/magento s'il n'existe pas
  file:
    path: "{{ magento_install_dir }}"
    state: directory
    mode: '0775'

- name: Configurer le groupe Magento
  group:
    name: magento
    state: present

- name: Ajouter www-data et datascientest au groupe Magento
  user:
    name: "{{ item }}"
    groups: magento
    append: yes
  loop:
    - www-data
    - datascientest

- name: Configuration des permissions
  file:
    path: "{{ magento_install_dir }}"
    owner: datascientest
    group: magento
    mode: '0775'
    recurse: yes

- name: Set Magento Access Keys for Composer
  command: composer global config http-basic.repo.magento.com "{{ magento_public_key }}" "{{ magento_private_key }}" 
  args:
    warn: false
  become_user: datascientest

- name: Activer le bit setgid pour les répertoires
  shell: find {{ magento_install_dir }} -type d -exec chmod g+s {} \;

- name: Installation de Magento avec Composer
  shell: composer -vvv create-project --repository-url=https://repo.magento.com/ magento/project-community-edition {{ magento_install_dir }} --prefer-dist --no-interaction
  become_user: datascientest
  environment:
    COMPOSER_PROCESS_TIMEOUT: 2000
    COMPOSER_MEMORY_LIMIT: -1

- name: Installation de Magento avec les paramètres par défaut
  command: >
    bin/magento setup:install
    --base-url="http://{{ magento_base_url }}"
    --db-host={{ magento_db_host }}
    --db-name={{ magento_db_name }}
    --db-user={{ magento_db_user }}
    --db-password={{ magento_db_password }}
    --admin-firstname={{ magento_admin_firstname }}
    --admin-lastname={{ magento_admin_lastname }}
    --admin-email={{ magento_admin_email }}
    --admin-user={{ magento_admin_user }}
    --admin-password={{ magento_admin_password }}
    --backend-frontname={{ magento_backend_frontname }}
    --search-engine={{ search_engine }}
    --elasticsearch-host={{ elasticsearch_host }}
    --elasticsearch-port={{ elasticsearch_port }}
  become_user: datascientest
  args:
    chdir: "{{ magento_chdir }}"

- name: Renommer le fichier local.xml.sample en local.xml
  copy:
    src: /var/www/magento/pub/errors/local.xml.sample
    dest: /var/www/magento/pub/errors/local.xml
    remote_src: yes
  notify:
    - Supprimer l'ancien fichier local.xml.sample

- name: Vérifier les permissions des fichiers critiques
  shell: chmod -R g+rw {{ magento_install_dir }}/var {{ magento_install_dir }}/pub {{ magento_install_dir }}/app/etc

- include_tasks: nginx.yml
  when: magento_webserver == "nginx"
