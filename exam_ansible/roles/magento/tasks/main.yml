---
# tasks file for magento

- name: Installer PHP et ses extensions
  apt:
    name: software-properties-common
    state: present

- name: Ajouter le PPA pour PHP
  apt_repository:
    repo: ppa:ondrej/php
    state: present

- name: Update Repository and Full-Upgrade Packages
  apt:
    update_cache: yes
#    upgrade: full

- name: Installer les dépendances php{{ php_version }} et composer
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - php{{ php_version }}
    - php{{ php_version }}-mysql
    - php{{ php_version }}-xml
    - php{{ php_version }}-mbstring
    - php{{ php_version }}-curl
    - php{{ php_version }}-intl
    - php{{ php_version }}-soap
    - php{{ php_version }}-zip
    - php{{ php_version }}-fpm
    - php{{ php_version }}-bcmath
    - php{{ php_version }}-dom
    - php{{ php_version }}-gd
    - php{{ php_version }}-iconv
    - php{{ php_version }}-simplexml
    - php{{ php_version }}-xsl
    - php{{ php_version }}-cli
    - php{{ php_version }}-ctype
    - php{{ php_version }}-fileinfo
    - php{{ php_version }}-sockets
    - php{{ php_version }}-tokenizer
    - php{{ php_version }}-xmlwriter
    - acl
    - unzip


- name: Suppression de l'ancien fichier composer s'il existe
  file:
    path: /usr/local/bin/composer
    state: absent
  ignore_errors: yes

- name: Téléchargement de Composer
  get_url:
    url: https://getcomposer.org/installer
#    url: https://getcomposer.org/composer.phar
    dest: /tmp/composer-setup.php{{ php_version }}
#    dest: /usr/local/bin/composer.phar
    mode: 0755

#- name: Composer | Symlink composer.phar
#  file:
#    src: composer.phar
#    dest: /usr/local/bin/composer
#    state: link

- name: Installation de Composer en global
  command: php{{ php_version }} /tmp/composer-setup.php{{ php_version }} --install-dir=/usr/local/bin --filename=composer

#- name: Créer le répertoire /root/.composer s'il n'existe pas
 #  file:
 #   path: "/root/.composer"
  #  state: directory
   # owner: root
    #mode: '0600'
########################## le bonnnnnn
#- name: Créer le répertoire /datascientest/.composer s'il n'existe pas
 # file:
  #  path: "/home/datascientest/.composer"
   # state: directory
   # owner: datascientest
    #mode: '0700'
####################
#- name: Download Composer Installer
#  get_url:
#    url: https://getcomposer.org/installer
#    dest: /tmp/composer-installer
#    mode: 0755

#- name: Install Composer using php{{ php_version }}
#  shell: php{{ php_version }} composer-installer
#  args:
#    chdir: /tmp/

#- name: Move Composer File to /user/local/bin
#  shell: mv composer.phar /usr/local/bin/composer
#  args:
#    chdir: /tmp/

#- name: Create Symbolic Link
#  file:
#    src: /usr/local/bin/composer
#    dest: /usr/bin/composer
#    owner: root
#    group: root
#    state: link
#########################################


- name: Vérification de la version de Composer
  command: composer --version
  register: composer_version
  #environment:
   # COMPOSER_HOME: /home/datascientest/.composer
   # COMPOSER_ALLOW_SUPERUSER: 1
  become_user: datascientest
  ignore_errors: yes
  

- debug:
    var: composer_version.stdout

- name: Clear Composer cache
  command: composer clear-cache
  become_user: datascientest
  args:
    chdir: "{{ magento_install_dir }}"

- name: Ajout de la clé GPG ElasticSearch
  ansible.builtin.apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Ajout du dépôt Elasticsearch
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
    state: present
    filename: "elasticsearch"
    update_cache: yes

- name: Installation d'Elasticsearch
  apt:
    name: elasticsearch
    state: present

#- name: activation du démarrage du service Elasticsearch au démarrage
#  systemd:
#    name: elasticsearch
#    enabled: yes
#    state: started

- name: Créer un fichier swap de 1 Go
  command: fallocate -l 1G /swapfile
  args:
    creates: /swapfile

- name: Appliquer les permissions appropriées au fichier swap
  file:
    path: /swapfile
    mode: '0600'

- name: Configurer le fichier swap
  command: mkswap /swapfile
  when: ansible_swaptotal_mb == 0

- name: Activer le swap
  command: swapon /swapfile
  when: ansible_swaptotal_mb == 0

- name: Ajouter le fichier swap à fstab pour un montage persistant
  lineinfile:
    path: /etc/fstab
    line: '/swapfile none swap sw 0 0'
    state: present
    create: yes

- name: Configuration d'Elasticsearch pour écouter sur localhost
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^network.host:'
    line: 'network.host: 0.0.0.0'
    state: present
  notify: Redémarrage Elasticsearch

- name: activation du démarrage du service Elasticsearch au démarrage
  systemd:
    name: elasticsearch
    enabled: yes
    state: started

- name: Set Magento Access Keys for Composer
  command: composer global config http-basic.repo.magento.com "{{ magento_public_key }}" "{{ magento_private_key }}" 
  args:
    warn: false
  become_user: datascientest

- name: Réduire l'allocation de mémoire pour Elasticsearch à 512 Mo
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xms'
    line: '-Xms512m'
    state: present
  notify: Redémarrage Elasticsearch

- name: Configurer la limite supérieure de mémoire pour Elasticsearch
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xmx'
    line: '-Xmx512m'
    state: present
  notify: Redémarrage Elasticsearch

- name: Configurer Elasticsearch pour un mode nœud unique
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^discovery.type:'
    line: 'discovery.type: single-node'
    state: present
  notify: Redémarrage Elasticsearch

#- name: Create the Magento Open Source Project
 # command: composer create-project --repository=https://repo.magento.com/ magento/project-community-edition {{ magento_install_dir }}
  #become_user: datascientest

#- name: Copier le fichier auth.json pour Composer
#  copy:
#    src: files/auth.json
#    dest: "/root/.composer/auth.json"
#    owner: root
#    mode: '0600'

- name: Suppression du répertoire /var/www/magento s'il existe déjà
  file:
    path: /var/www/magento
    state: absent

- name: Création du répertoire /var/www/magento s'il n'existe pas
  file:
    path: "{{ magento_install_dir }}"
    state: directory
    mode: '0755'

- name: Configuration des permissions
  file:
    path: "{{ magento_install_dir }}"
    owner: datascientest # www-data
    group: datascientest  # www-data
    mode: '0755'
    recurse: yes

- name: Installation de Magento avec Composer
  shell: composer -vvv create-project --repository-url=https://repo.magento.com/ magento/project-community-edition {{ magento_install_dir }} --prefer-dist --no-interaction
  become_user: datascientest
  environment:
    COMPOSER_PROCESS_TIMEOUT: 2000
    COMPOSER_MEMORY_LIMIT: -1 
 # environment:
  #  COMPOSER_HOME: /home/datascientest/.composer
   # COMPOSER_ALLOW_SUPERUSER: 1
 # args:
 #   chdir: /var/www/magento

#- name: Installer Magento avec Composer
#  command: composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition {{ magento_install_dir }} -vvv

#- name: Configurer les permissions
#  file:
#    path: "{{ magento_install_dir }}"
#    owner: www-data
#    group: www-data
#    mode: '0755'
#    recurse: yes

- name: Installation de Magento avec les paramètres par défaut
  command: >
    bin/magento setup:install
    --base-url={{ magento_base_url }}
    --db-host={{ magento_db_host }}
    --db-name={{ magento_db_name }}
    --db-user={{ magento_db_user }}
    --db-password={{ magento_db_password }}
    --admin-firstname={{ magento_admin_firstname }}
    --admin-lastname={{ magento_admin_lastname }}
    --admin-email={{ magento_admin_email }}
    --admin-user={{ magento_admin_user }}
    --admin-password={{ magento_admin_password }}
    --backend-frontname={{ magento_backend_frontname }}
    --search-engine={{ search_engine }}
    --elasticsearch-host={{ elasticsearch_host }}
    --elasticsearch-port={{ elasticsearch_port }}
  args:
    chdir: "{{ magento_chdir }}"

- include_tasks: nginx.yml
  when: magento_webserver == "nginx"
